generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ===== Game =====
model Game {
  id         BigInt   @id @default(autoincrement())
  code       String   @unique
  gmId       String
  title      String?
  started    Boolean  @default(false)
  createdAt  DateTime @default(now())
  expiresAt  DateTime

  players    Player[]
  locations  Location[]
  items      Item[]
  messages   Message[]
  rolls      Roll[]

  @@index([code])
}

// ===== Location =====
model Location {
  id        BigInt   @id @default(autoincrement())
  gameId    BigInt
  name      String
  descr     String?
  imageUrl  String?
  createdAt DateTime @default(now())

  game      Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  players   Player[]
  items     Item[]

  @@index([gameId])
}

// ===== Player =====
model Player {
  id         BigInt   @id @default(autoincrement())
  gameId     BigInt
  tgId       String
  name       String
  avatar     String?
  hp         Int      @default(10)
  gold       Int      @default(0)
  isGM       Boolean  @default(false)
  locationId BigInt?
  createdAt  DateTime @default(now())

  game       Game      @relation(fields: [gameId], references: [id], onDelete: Cascade)
  location   Location? @relation(fields: [locationId], references: [id], onDelete: SetNull)

  items      Item[]
  messages   Message[]
  rolls      Roll[]

  @@unique([gameId, tgId])
  @@index([gameId])
  @@index([locationId])
}

// ===== Item =====
model Item {
  id            BigInt   @id @default(autoincrement())
  gameId        BigInt
  ownerPlayerId BigInt?
  onFloor       Boolean  @default(false)
  locationId    BigInt?
  name          String
  qty           Int      @default(1)
  type          String   @default("misc")
  note          String?
  createdAt     DateTime @default(now())

  game      Game      @relation(fields: [gameId], references: [id], onDelete: Cascade)
  owner     Player?   @relation(fields: [ownerPlayerId], references: [id], onDelete: SetNull)
  location  Location? @relation(fields: [locationId], references: [id], onDelete: SetNull)

  @@index([gameId])
  @@index([ownerPlayerId])
  @@index([locationId])
}

// ===== Message =====
model Message {
  id        BigInt   @id @default(autoincrement())
  gameId    BigInt
  authorId  BigInt?
  text      String
  createdAt DateTime @default(now())

  game     Game    @relation(fields: [gameId], references: [id], onDelete: Cascade)
  author   Player? @relation(fields: [authorId], references: [id], onDelete: SetNull)

  @@index([gameId])
}

// ===== Roll =====
model Roll {
  id        BigInt   @id @default(autoincrement())
  gameId    BigInt
  playerId  BigInt
  die       Int
  result    Int
  createdAt DateTime @default(now())

  game    Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)
  player  Player @relation(fields: [playerId], references: [id], onDelete: Cascade)

  @@index([gameId])
}
