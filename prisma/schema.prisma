// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  GM
  PLAYER
}

model Game {
  id        String   @id @default(uuid()) @db.Uuid
  code      String   @unique
  title     String?
  gmId      String
  started   Boolean  @default(false)
  createdAt DateTime @default(now())
  expiresAt DateTime @default(dbgenerated("now() + interval '6 hours'")) @db.Timestamptz(6)

  currentLocationId String?
  currentLocation   Location? @relation("GameCurrentLocation", fields: [currentLocationId], references: [id])

  players   Player[]
  locations Location[]
  items     Item[]
  messages  Message[]

  @@index([expiresAt])
  @@index([code])
}

model Player {
  id        String   @id @default(uuid()) @db.Uuid
  gameId    String   @db.Uuid
  game      Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)

  tgId      String
  name      String
  avatar    String?
  role      Role      @default(PLAYER)

  hp        Int       @default(10)
  gold      Int       @default(0)

  currentLocationId String?  @db.Uuid
  currentLocation   Location? @relation("PlayerCurrentLocation", fields: [currentLocationId], references: [id])

  // Владеемые предметы (ответная сторона к Item.owner)
  items     Item[]   @relation("PlayerItems")

  messages  Message[]
  createdAt DateTime @default(now())

  @@index([gameId])
  @@index([tgId, gameId], map: "player_tg_in_game")
}

model Location {
  id        String   @id @default(uuid()) @db.Uuid
  gameId    String   @db.Uuid
  game      Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)

  name      String
  descr     String?
  imageUrl  String?

  createdAt DateTime @default(now())

  items       Item[]    @relation("LocationItems")
  playersHere Player[]  @relation("PlayerCurrentLocation")
  gamesAsCurrentLocation Game[] @relation("GameCurrentLocation")

  @@index([gameId])
  @@unique([gameId, name], map: "unique_location_per_game")
}

model Item {
  id        String   @id @default(uuid()) @db.Uuid
  gameId    String   @db.Uuid
  game      Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)

  name      String
  descr     String?

  // Владелец (игрок)
  ownerId   String?  @db.Uuid
  owner     Player?  @relation("PlayerItems", fields: [ownerId], references: [id])

  // Локация
  locationId String?  @db.Uuid
  location   Location? @relation("LocationItems", fields: [locationId], references: [id])

  goldAmount Int?
  createdAt  DateTime @default(now())

  @@index([gameId])
  @@index([ownerId])
  @@index([locationId])
}

model Message {
  id        String   @id @default(uuid()) @db.Uuid
  gameId    String   @db.Uuid
  game      Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)

  authorId  String?  @db.Uuid
  author    Player?  @relation(fields: [authorId], references: [id])

  text      String
  createdAt DateTime @default(now())

  @@index([gameId, createdAt])
}
